/// Generated by build script in amqp0-specs
/// Pregenerated files are used by default.
///
/// Build using amqp0-pregen crate using: cargo --features="amqp0-build-specs"
/// Regenerate pregenerated scripts using: cargo --features="amqp0-pregen-specs"
///
/// EDITORS BEWARE: Your modifications may be overridden

pub static QPID9_0: ::Spec = 
::Spec {
name: "qpid",
classes: &::phf::OrderedMap {
    key: 5621513170501782519,
    disps: ::phf::Slice::Static(&[
        (0, 0),
        (0, 4),
        (2, 7),
    ]),
    idxs: ::phf::Slice::Static(&[
        0,
        8,
        6,
        4,
        10,
        11,
        3,
        7,
        2,
        5,
        9,
        1,
    ]),
    entries: ::phf::Slice::Static(&[
        ("access", ::Class {
name: "access",
fields: &[],
index: 30,
methods: &[::ClassMethod {
name: "request",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("request-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "realm",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exclusive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "passive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "active",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "write",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "read",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "request-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},

],
},

]
}),
        ("basic", ::Class {
name: "basic",
fields: &[::ClassField {
name: "content-type",
domain: "shortstr"
},
::ClassField {
name: "content-encoding",
domain: "shortstr"
},
::ClassField {
name: "headers",
domain: "table"
},
::ClassField {
name: "delivery-mode",
domain: "octet"
},
::ClassField {
name: "priority",
domain: "octet"
},
::ClassField {
name: "correlation-id",
domain: "shortstr"
},
::ClassField {
name: "reply-to",
domain: "shortstr"
},
::ClassField {
name: "expiration",
domain: "shortstr"
},
::ClassField {
name: "message-id",
domain: "shortstr"
},
::ClassField {
name: "timestamp",
domain: "timestamp"
},
::ClassField {
name: "type",
domain: "shortstr"
},
::ClassField {
name: "user-id",
domain: "shortstr"
},
::ClassField {
name: "app-id",
domain: "shortstr"
},
::ClassField {
name: "cluster-id",
domain: "shortstr"
},

],
index: 60,
methods: &[::ClassMethod {
name: "qos",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("qos-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "prefetch-size",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "prefetch-count",
domain: "short",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "global",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "qos-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "consume",
index: 20,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("consume-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-local",
domain: "no-local",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-ack",
domain: "no-ack",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exclusive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "arguments",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "consume-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "cancel",
index: 30,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("cancel-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "cancel-ok",
index: 31,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "publish",
index: 40,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "mandatory",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "immediate",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "return",
index: 50,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "reply-code",
domain: "reply-code",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "reply-text",
domain: "reply-text",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "deliver",
index: 60,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "redelivered",
domain: "redelivered",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "get",
index: 70,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("get-empty"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-ack",
domain: "no-ack",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "get-ok",
index: 71,
chassis_client: Some("MAY"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: true,
fields: &[::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "redelivered",
domain: "redelivered",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "message-count",
domain: "long",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "get-empty",
index: 72,
chassis_client: Some("MAY"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "cluster-id",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "ack",
index: 80,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "multiple",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "reject",
index: 90,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "requeue",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "recover",
index: 100,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "requeue",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "recover-sync",
index: 102,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("recover-sync-ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "requeue",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "recover-sync-ok",
index: 101,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},

]
}),
        ("channel", ::Class {
name: "channel",
fields: &[],
index: 20,
methods: &[::ClassMethod {
name: "open",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("open-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "out-of-band",
domain: "shortstr",
assertions: &[::ClassMethodFieldAssertion::Null,

],
is_reserved: false
},

],
},
::ClassMethod {
name: "open-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "channel-id",
domain: "channel-id",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "flow",
index: 20,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("flow-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "active",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "flow-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "active",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "close",
index: 40,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("close-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "reply-code",
domain: "reply-code",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "reply-text",
domain: "reply-text",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "class-id",
domain: "class-id",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "method-id",
domain: "method-id",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "close-ok",
index: 41,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "resume",
index: 50,
chassis_client: None,
chassis_server: Some("MAY"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "channel-id",
domain: "channel-id",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "ping",
index: 60,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "pong",
index: 70,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "ok",
index: 80,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[],
},

]
}),
        ("connection", ::Class {
name: "connection",
fields: &[],
index: 10,
methods: &[::ClassMethod {
name: "start",
index: 10,
chassis_client: Some("MUST"),
chassis_server: None,
response: Some("start-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "version-major",
domain: "octet",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "version-minor",
domain: "octet",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "server-properties",
domain: "peer-properties",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "mechanisms",
domain: "longstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},
::ClassMethodField {
name: "locales",
domain: "longstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},

],
},
::ClassMethod {
name: "start-ok",
index: 11,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "client-properties",
domain: "peer-properties",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "mechanism",
domain: "shortstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},
::ClassMethodField {
name: "response",
domain: "longstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},
::ClassMethodField {
name: "locale",
domain: "shortstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},

],
},
::ClassMethod {
name: "secure",
index: 20,
chassis_client: Some("MUST"),
chassis_server: None,
response: Some("secure-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "challenge",
domain: "longstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "secure-ok",
index: 21,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "response",
domain: "longstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},

],
},
::ClassMethod {
name: "tune",
index: 30,
chassis_client: Some("MUST"),
chassis_server: None,
response: Some("tune-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "channel-max",
domain: "short",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "frame-max",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "heartbeat",
domain: "short",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "tune-ok",
index: 31,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "channel-max",
domain: "short",
assertions: &[::ClassMethodFieldAssertion::NotNull,
::ClassMethodFieldAssertion::ChannelMax,

],
is_reserved: false
},
::ClassMethodField {
name: "frame-max",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "heartbeat",
domain: "short",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "open",
index: 40,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("redirect"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "virtual-host",
domain: "path",
assertions: &[::ClassMethodFieldAssertion::Regexp("^[a-zA-Z0-9/-_]+$"),

],
is_reserved: false
},
::ClassMethodField {
name: "capabilities",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "insist",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "open-ok",
index: 41,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "known-hosts",
domain: "known-hosts",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "redirect",
index: 42,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "host",
domain: "shortstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},
::ClassMethodField {
name: "known-hosts",
domain: "known-hosts",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "close",
index: 50,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("close-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "reply-code",
domain: "reply-code",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "reply-text",
domain: "reply-text",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "class-id",
domain: "class-id",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "method-id",
domain: "method-id",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "close-ok",
index: 51,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},

]
}),
        ("dtx", ::Class {
name: "dtx",
fields: &[],
index: 100,
methods: &[::ClassMethod {
name: "select",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("select-ok"),
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "select-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "start",
index: 20,
chassis_client: None,
chassis_server: Some("MAY"),
response: Some("start-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "dtx-identifier",
domain: "shortstr",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},

],
},
::ClassMethod {
name: "start-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},

]
}),
        ("exchange", ::Class {
name: "exchange",
fields: &[],
index: 40,
methods: &[::ClassMethod {
name: "declare",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("declare-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[::ClassMethodFieldAssertion::Regexp("^[a-zA-Z0-9-_.:]+$"),

],
is_reserved: false
},
::ClassMethodField {
name: "type",
domain: "shortstr",
assertions: &[::ClassMethodFieldAssertion::Regexp("^[a-zA-Z0-9-_.:]+$"),

],
is_reserved: false
},
::ClassMethodField {
name: "passive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "durable",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "auto-delete",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "internal",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "arguments",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "declare-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "delete",
index: 20,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("delete-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},
::ClassMethodField {
name: "if-unused",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "delete-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "bound",
index: 22,
chassis_client: None,
chassis_server: Some("SHOULD"),
response: Some("bound-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "bound-ok",
index: 23,
chassis_client: Some("SHOULD"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "reply-code",
domain: "reply-code",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "reply-text",
domain: "reply-text",
assertions: &[],
is_reserved: false
},

],
},

]
}),
        ("file", ::Class {
name: "file",
fields: &[::ClassField {
name: "content-type",
domain: "shortstr"
},
::ClassField {
name: "content-encoding",
domain: "shortstr"
},
::ClassField {
name: "headers",
domain: "table"
},
::ClassField {
name: "priority",
domain: "octet"
},
::ClassField {
name: "reply-to",
domain: "shortstr"
},
::ClassField {
name: "message-id",
domain: "shortstr"
},
::ClassField {
name: "filename",
domain: "shortstr"
},
::ClassField {
name: "timestamp",
domain: "timestamp"
},
::ClassField {
name: "cluster-id",
domain: "shortstr"
},

],
index: 70,
methods: &[::ClassMethod {
name: "qos",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("qos-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "prefetch-size",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "prefetch-count",
domain: "short",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "global",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "qos-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "consume",
index: 20,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("consume-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-local",
domain: "no-local",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-ack",
domain: "no-ack",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exclusive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "filter",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "consume-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "cancel",
index: 30,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("cancel-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "cancel-ok",
index: 31,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "open",
index: 40,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("open-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "identifier",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "content-size",
domain: "longlong",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "open-ok",
index: 41,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("stage"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "staged-size",
domain: "longlong",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "stage",
index: 50,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: true,
fields: &[],
},
::ClassMethod {
name: "publish",
index: 60,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "mandatory",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "immediate",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "identifier",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "return",
index: 70,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "reply-code",
domain: "reply-code",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "reply-text",
domain: "reply-text",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "deliver",
index: 80,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "redelivered",
domain: "redelivered",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "identifier",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "ack",
index: 90,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "multiple",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "reject",
index: 100,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "requeue",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},

]
}),
        ("message", ::Class {
name: "message",
fields: &[],
index: 120,
methods: &[::ClassMethod {
name: "transfer",
index: 10,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("reject"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "destination",
domain: "destination",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "redelivered",
domain: "redelivered",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "immediate",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "ttl",
domain: "duration",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "priority",
domain: "octet",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "timestamp",
domain: "timestamp",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "delivery-mode",
domain: "octet",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "expiration",
domain: "timestamp",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "message-id",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "correlation-id",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "reply-to",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "content-type",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "content-encoding",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "user-id",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "app-id",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "transaction-id",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "security-token",
domain: "security-token",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "application-headers",
domain: "table",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "body",
domain: "content",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "consume",
index: 20,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "destination",
domain: "destination",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-local",
domain: "no-local",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-ack",
domain: "no-ack",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exclusive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "filter",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "cancel",
index: 30,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "destination",
domain: "destination",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "get",
index: 40,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("empty"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "destination",
domain: "destination",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-ack",
domain: "no-ack",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "recover",
index: 50,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "requeue",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "open",
index: 60,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "reference",
domain: "reference",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "close",
index: 70,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "reference",
domain: "reference",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "append",
index: 80,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "reference",
domain: "reference",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "bytes",
domain: "longstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "checkpoint",
index: 90,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "reference",
domain: "reference",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "identifier",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "resume",
index: 100,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: Some("offset"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "reference",
domain: "reference",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "identifier",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "qos",
index: 110,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("ok"),
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "prefetch-size",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "prefetch-count",
domain: "short",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "global",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "ok",
index: 500,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "empty",
index: 510,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "reject",
index: 520,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "code",
domain: "reject-code",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "text",
domain: "reject-text",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "offset",
index: 530,
chassis_client: Some("MUST"),
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: false,
fields: &[::ClassMethodField {
name: "value",
domain: "offset",
assertions: &[],
is_reserved: false
},

],
},

]
}),
        ("queue", ::Class {
name: "queue",
fields: &[],
index: 50,
methods: &[::ClassMethod {
name: "declare",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("declare-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[::ClassMethodFieldAssertion::Regexp("^[a-zA-Z0-9-_.:]*$"),

],
is_reserved: false
},
::ClassMethodField {
name: "passive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "durable",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exclusive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "auto-delete",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "arguments",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "declare-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},
::ClassMethodField {
name: "message-count",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "consumer-count",
domain: "long",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "bind",
index: 20,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("bind-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "arguments",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "bind-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "unbind",
index: 50,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("unbind-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "arguments",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "unbind-ok",
index: 51,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "purge",
index: 30,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("purge-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "purge-ok",
index: 31,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "message-count",
domain: "long",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "delete",
index: 40,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("delete-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "if-unused",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "if-empty",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "delete-ok",
index: 41,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "message-count",
domain: "long",
assertions: &[],
is_reserved: false
},

],
},

]
}),
        ("stream", ::Class {
name: "stream",
fields: &[::ClassField {
name: "content-type",
domain: "shortstr"
},
::ClassField {
name: "content-encoding",
domain: "shortstr"
},
::ClassField {
name: "headers",
domain: "table"
},
::ClassField {
name: "priority",
domain: "octet"
},
::ClassField {
name: "timestamp",
domain: "timestamp"
},

],
index: 80,
methods: &[::ClassMethod {
name: "qos",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("qos-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "prefetch-size",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "prefetch-count",
domain: "short",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "consume-rate",
domain: "long",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "global",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "qos-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "consume",
index: 20,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("consume-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "no-local",
domain: "no-local",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exclusive",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "filter",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "consume-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "cancel",
index: 30,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("cancel-ok"),
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "nowait",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "cancel-ok",
index: 31,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "publish",
index: 40,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "ticket",
domain: "access-ticket",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "mandatory",
domain: "bit",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "immediate",
domain: "bit",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "return",
index: 50,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "reply-code",
domain: "reply-code",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "reply-text",
domain: "reply-text",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "routing-key",
domain: "shortstr",
assertions: &[],
is_reserved: false
},

],
},
::ClassMethod {
name: "deliver",
index: 60,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "consumer-tag",
domain: "consumer-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "delivery-tag",
domain: "delivery-tag",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "exchange",
domain: "exchange-name",
assertions: &[],
is_reserved: false
},
::ClassMethodField {
name: "queue",
domain: "queue-name",
assertions: &[::ClassMethodFieldAssertion::NotNull,

],
is_reserved: false
},

],
},

]
}),
        ("tunnel", ::Class {
name: "tunnel",
fields: &[::ClassField {
name: "headers",
domain: "table"
},
::ClassField {
name: "proxy-name",
domain: "shortstr"
},
::ClassField {
name: "data-name",
domain: "shortstr"
},
::ClassField {
name: "durable",
domain: "octet"
},
::ClassField {
name: "broadcast",
domain: "octet"
},

],
index: 110,
methods: &[::ClassMethod {
name: "request",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: None,
is_synchronous: false,
has_content: true,
fields: &[::ClassMethodField {
name: "meta-data",
domain: "table",
assertions: &[],
is_reserved: false
},

],
},

]
}),
        ("tx", ::Class {
name: "tx",
fields: &[],
index: 90,
methods: &[::ClassMethod {
name: "select",
index: 10,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("select-ok"),
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "select-ok",
index: 11,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "commit",
index: 20,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("commit-ok"),
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "commit-ok",
index: 21,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "rollback",
index: 30,
chassis_client: None,
chassis_server: Some("MUST"),
response: Some("rollback-ok"),
is_synchronous: true,
has_content: false,
fields: &[],
},
::ClassMethod {
name: "rollback-ok",
index: 31,
chassis_client: Some("MUST"),
chassis_server: None,
response: None,
is_synchronous: true,
has_content: false,
fields: &[],
},

]
}),
    ]),
},
constants: &::phf::OrderedMap {
    key: 8958141709656110593,
    disps: ::phf::Slice::Static(&[
        (0, 0),
    ]),
    idxs: ::phf::Slice::Static(&[
        1,
        0,
    ]),
    entries: ::phf::Slice::Static(&[
        ("frame-end", ::Constant {
name: "frame-end",
value: 206,
class: None
}),
        ("frame-min-size", ::Constant {
name: "frame-min-size",
value: 4096,
class: None
}),
    ]),
},
domains: &::phf::OrderedMap {
    key: 6988065091549448246,
    disps: ::phf::Slice::Static(&[
        (0, 3),
        (4, 0),
        (0, 12),
        (6, 12),
        (0, 27),
        (12, 12),
        (1, 0),
    ]),
    idxs: ::phf::Slice::Static(&[
        15,
        18,
        26,
        20,
        28,
        1,
        29,
        23,
        11,
        3,
        22,
        25,
        16,
        30,
        17,
        8,
        9,
        31,
        13,
        0,
        2,
        5,
        21,
        24,
        19,
        12,
        10,
        27,
        6,
        7,
        4,
        14,
    ]),
    entries: ::phf::Slice::Static(&[
        ("access-ticket", "short"),
        ("bit", "bit"),
        ("channel-id", "longstr"),
        ("class-id", "short"),
        ("consumer-tag", "shortstr"),
        ("delivery-tag", "longlong"),
        ("destination", "shortstr"),
        ("duration", "longlong"),
        ("exchange-name", "shortstr"),
        ("known-hosts", "shortstr"),
        ("long", "long"),
        ("longlong", "longlong"),
        ("longstr", "longstr"),
        ("method-id", "short"),
        ("no-ack", "bit"),
        ("no-local", "bit"),
        ("octet", "octet"),
        ("offset", "longlong"),
        ("path", "shortstr"),
        ("peer-properties", "table"),
        ("queue-name", "shortstr"),
        ("redelivered", "bit"),
        ("reference", "longstr"),
        ("reject-code", "short"),
        ("reject-text", "shortstr"),
        ("reply-code", "short"),
        ("reply-text", "shortstr"),
        ("security-token", "longstr"),
        ("short", "short"),
        ("shortstr", "shortstr"),
        ("table", "table"),
        ("timestamp", "timestamp"),
    ]),
},
frame_types: &::phf::OrderedMap {
    key: 1897749892740154578,
    disps: ::phf::Slice::Static(&[
        (2, 0),
        (2, 6),
    ]),
    idxs: ::phf::Slice::Static(&[
        5,
        7,
        6,
        0,
        4,
        2,
        3,
        1,
    ]),
    entries: ::phf::Slice::Static(&[
        ("frame-body", ::Constant {
name: "frame-body",
value: 3,
class: None
}),
        ("frame-header", ::Constant {
name: "frame-header",
value: 2,
class: None
}),
        ("frame-heartbeat", ::Constant {
name: "frame-heartbeat",
value: 8,
class: None
}),
        ("frame-method", ::Constant {
name: "frame-method",
value: 1,
class: None
}),
        ("frame-oob-body", ::Constant {
name: "frame-oob-body",
value: 6,
class: None
}),
        ("frame-oob-header", ::Constant {
name: "frame-oob-header",
value: 5,
class: None
}),
        ("frame-oob-method", ::Constant {
name: "frame-oob-method",
value: 4,
class: None
}),
        ("frame-trace", ::Constant {
name: "frame-trace",
value: 7,
class: None
}),
    ]),
},
response_codes: &::phf::OrderedMap {
    key: 1897749892740154578,
    disps: ::phf::Slice::Static(&[
        (0, 0),
        (1, 0),
        (17, 15),
        (4, 12),
    ]),
    idxs: ::phf::Slice::Static(&[
        1,
        9,
        11,
        12,
        8,
        4,
        5,
        0,
        14,
        18,
        2,
        3,
        13,
        7,
        17,
        6,
        16,
        15,
        10,
    ]),
    entries: ::phf::Slice::Static(&[
        ("access-refused", ::Constant {
name: "access-refused",
value: 403,
class: Some("soft-error")
}),
        ("channel-error", ::Constant {
name: "channel-error",
value: 504,
class: Some("hard-error")
}),
        ("command-invalid", ::Constant {
name: "command-invalid",
value: 503,
class: Some("hard-error")
}),
        ("connection-forced", ::Constant {
name: "connection-forced",
value: 320,
class: Some("hard-error")
}),
        ("content-too-large", ::Constant {
name: "content-too-large",
value: 311,
class: Some("soft-error")
}),
        ("frame-error", ::Constant {
name: "frame-error",
value: 501,
class: Some("hard-error")
}),
        ("internal-error", ::Constant {
name: "internal-error",
value: 541,
class: Some("hard-error")
}),
        ("invalid-path", ::Constant {
name: "invalid-path",
value: 402,
class: Some("hard-error")
}),
        ("no-consumers", ::Constant {
name: "no-consumers",
value: 313,
class: Some("soft-error")
}),
        ("no-route", ::Constant {
name: "no-route",
value: 312,
class: Some("soft-error")
}),
        ("not-allowed", ::Constant {
name: "not-allowed",
value: 530,
class: Some("hard-error")
}),
        ("not-delivered", ::Constant {
name: "not-delivered",
value: 310,
class: Some("soft-error")
}),
        ("not-found", ::Constant {
name: "not-found",
value: 404,
class: Some("soft-error")
}),
        ("not-implemented", ::Constant {
name: "not-implemented",
value: 540,
class: Some("hard-error")
}),
        ("precondition-failed", ::Constant {
name: "precondition-failed",
value: 406,
class: Some("soft-error")
}),
        ("reply-success", ::Constant {
name: "reply-success",
value: 200,
class: None
}),
        ("resource-error", ::Constant {
name: "resource-error",
value: 506,
class: Some("hard-error")
}),
        ("resource-locked", ::Constant {
name: "resource-locked",
value: 405,
class: Some("soft-error")
}),
        ("syntax-error", ::Constant {
name: "syntax-error",
value: 502,
class: Some("hard-error")
}),
    ]),
},
version: ::Version { minor: 9, revision: 0 },
}
;
